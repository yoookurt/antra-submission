{
	"name": "df_brnz2slvr_unittest_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_movie_bronze_parquet",
						"type": "DatasetReference"
					},
					"name": "brz"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				},
				{
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          SourceFile as string,",
				"          IngestTime as timestamp,",
				"          p_IngestDate as date,",
				"          Status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> brz",
				"cast1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"brz derive(moviestr = movie,",
				"          movie = movie) ~> derivedColumn1",
				"derivedColumn1 cast(output(",
				"          moviestr as ({} as string)",
				"     ),",
				"     errors: false) ~> cast1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1),",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1",
				"brz sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink2"
			]
		}
	}
}