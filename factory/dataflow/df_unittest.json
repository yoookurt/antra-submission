{
	"name": "df_unittest",
	"properties": {
		"folder": {
			"name": "movie"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_movie_raw_json",
						"type": "DatasetReference"
					},
					"name": "raw2bronze"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_movie_bronze_parquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "addMetadata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string[]",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'SourceFile',",
				"     documentForm: 'documentPerLine') ~> raw2bronze",
				"raw2bronze foldDown(unroll(movie, movie),",
				"     mapColumn(",
				"          movie",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(IngestTime = currentTimestamp(),",
				"          IngestDate = currentDate(),",
				"          Status = \"new\") ~> addMetadata",
				"addMetadata sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          SourceFile as string,",
				"          Status as string,",
				"          moviestr as string,",
				"          p_IngestDate as date,",
				"          movie as string,",
				"          IngestTime as timestamp",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0622,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Status,",
				"          movie,",
				"          IngestTime,",
				"          p_IngestDate = IngestDate",
				"     )) ~> sink1"
			]
		}
	}
}