{
	"name": "df_unittest_copy",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_unittest_json",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_movie_bronze_parquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "cast2"
				},
				{
					"name": "cast3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MovieId as integer,",
				"          SourceFile as string,",
				"          IngestTime as string,",
				"          p_IngestDate as string,",
				"          Status as string,",
				"          moviestr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 cast(output(",
				"          IngestTime as timestamp",
				"     ),",
				"     errors: false) ~> cast1",
				"cast1 cast(output(",
				"          p_IngestDate as date",
				"     ),",
				"     errors: true) ~> cast2",
				"cast2 cast(output(",
				"          moviestr as string",
				"     ),",
				"     errors: true) ~> cast3",
				"cast3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0622,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true) ~> sink1"
			]
		}
	}
}