{
	"name": "df_raw2bronze",
	"properties": {
		"folder": {
			"name": "movie"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_movie_raw_json",
						"type": "DatasetReference"
					},
					"name": "raw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_movie_bronze_parquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "addMetadata"
				},
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as (Budget as float, BackdropUrl as string, CreatedBy as string, CreatedDate as string, Id as integer, Title as string, Overview as string, Tagline as string, Revenue as float, ImdbUrl as string, TmdbUrl as string, PosterUrl as string, OriginalLanguage as string, ReleaseDate as date, RunTime as integer, Price as float, UpdatedBy as string, UpdatedDate as date, genres as (id as integer, name as string)[])[]",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'SourceFile',",
				"     documentForm: 'documentPerLine') ~> raw",
				"raw derive(IngestTime = currentTimestamp(),",
				"          p_IngestDate = currentDate(),",
				"          Status = \"new\") ~> addMetadata",
				"addMetadata foldDown(unroll(movie, movie),",
				"     mapColumn(",
				"          movie = movie,",
				"          SourceFile,",
				"          IngestTime,",
				"          p_IngestDate,",
				"          Status",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          SourceFile as string,",
				"          Status as string,",
				"          moviestr as string,",
				"          p_IngestDate as date,",
				"          movie as string,",
				"          IngestTime as timestamp",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0622,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     mapColumn(",
				"          movie,",
				"          SourceFile,",
				"          IngestTime,",
				"          p_IngestDate,",
				"          Status",
				"     )) ~> sink1"
			]
		}
	}
}